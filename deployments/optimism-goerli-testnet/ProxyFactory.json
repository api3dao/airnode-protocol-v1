{
  "address": "0x95053C676f4c59daBf718C8afeFB789603e02B23",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dapiServer",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dapiName",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "DeployedDapiProxy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dapiName",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oevBeneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "DeployedDapiProxyWithOev",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataFeedId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "DeployedDataFeedProxy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "dataFeedId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oevBeneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "DeployedDataFeedProxyWithOev",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "dapiServer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dapiName",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "deployDapiProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dapiName",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "oevBeneficiary",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "deployDapiProxyWithOev",
      "outputs": [
        {
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataFeedId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "deployDataFeedProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "dataFeedId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "oevBeneficiary",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "deployDataFeedProxyWithOev",
      "outputs": [
        {
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x468a70ef370f50989802c74b045bcbe6e326db84e3db7e7173e5e4b5d14fca7d",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x07b589f06bD0A5324c4E2376d66d2F4F25921DE1",
    "contractAddress": null,
    "transactionIndex": 1,
    "gasUsed": "1206545",
    "logsBloom": "0x
    "blockHash": "0x4080405941be6ebe1f94b752981eb40acfda053238c9fc8dc80de4dba73685e2",
    "transactionHash": "0x468a70ef370f50989802c74b045bcbe6e326db84e3db7e7173e5e4b5d14fca7d",
    "logs": [],
    "blockNumber": 6677915,
    "cumulativeGasUsed": "1206545",
    "status": 1,
    "byzantium": true
  },
  "args": ["0xc78E452C72f458f7af2125E228b6f2471404E549"],
  "numDeployments": 1,
  "solcInputHash": "9d1ae69a8724e0c9c1265934ff29ffad",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dapiServer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dapiName\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"DeployedDapiProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dapiName\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oevBeneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"DeployedDapiProxyWithOev\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataFeedId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"DeployedDataFeedProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataFeedId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oevBeneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"DeployedDataFeedProxyWithOev\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"dapiServer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dapiName\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"deployDapiProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dapiName\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"oevBeneficiary\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"deployDapiProxyWithOev\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataFeedId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"deployDataFeedProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataFeedId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"oevBeneficiary\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"deployDataFeedProxyWithOev\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The proxies are deployed normally and not cloned to minimize the gas cost overhead while using them to read data feed values\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_dapiServer\":\"DapiServer address\"}},\"deployDapiProxy(bytes32,bytes)\":{\"params\":{\"dapiName\":\"dAPI name\",\"metadata\":\"Metadata associated with the proxy\"},\"returns\":{\"proxyAddress\":\"Proxy address\"}},\"deployDapiProxyWithOev(bytes32,address,bytes)\":{\"params\":{\"dapiName\":\"dAPI name\",\"metadata\":\"Metadata associated with the proxy\",\"oevBeneficiary\":\"OEV beneficiary\"},\"returns\":{\"proxyAddress\":\"Proxy address\"}},\"deployDataFeedProxy(bytes32,bytes)\":{\"params\":{\"dataFeedId\":\"Data feed ID\",\"metadata\":\"Metadata associated with the proxy\"},\"returns\":{\"proxyAddress\":\"Proxy address\"}},\"deployDataFeedProxyWithOev(bytes32,address,bytes)\":{\"params\":{\"dataFeedId\":\"Data feed ID\",\"metadata\":\"Metadata associated with the proxy\",\"oevBeneficiary\":\"OEV beneficiary\"},\"returns\":{\"proxyAddress\":\"Proxy address\"}}},\"title\":\"Contract factory that deterministically deploys proxies that read data feeds (Beacons or Beacon sets) or dAPIs, along with optional OEV support\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"dapiServer()\":{\"notice\":\"DapiServer address\"},\"deployDapiProxy(bytes32,bytes)\":{\"notice\":\"Deterministically deploys a dAPI proxy\"},\"deployDapiProxyWithOev(bytes32,address,bytes)\":{\"notice\":\"Deterministically deploys a dAPI proxy with OEV support\"},\"deployDataFeedProxy(bytes32,bytes)\":{\"notice\":\"Deterministically deploys a data feed proxy\"},\"deployDataFeedProxyWithOev(bytes32,address,bytes)\":{\"notice\":\"Deterministically deploys a data feed proxy with OEV support\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dapis/proxies/ProxyFactory.sol\":\"ProxyFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/access-control-registry/interfaces/IAccessControlRegistryAdminned.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/interfaces/ISelfMulticall.sol\\\";\\n\\ninterface IAccessControlRegistryAdminned is ISelfMulticall {\\n    function accessControlRegistry() external view returns (address);\\n\\n    function adminRoleDescription() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xd71aae2566c019a9b2da5e1ec51421a62898495fa6fd08e2cc39451511dda334\",\"license\":\"MIT\"},\"contracts/access-control-registry/interfaces/IAccessControlRegistryAdminnedWithManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControlRegistryAdminned.sol\\\";\\n\\ninterface IAccessControlRegistryAdminnedWithManager is\\n    IAccessControlRegistryAdminned\\n{\\n    function manager() external view returns (address);\\n\\n    function adminRole() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x8a8e1756fca81175305755b7a311536132e88173f60b2ac0fdeef92a6236afc5\",\"license\":\"MIT\"},\"contracts/dapis/interfaces/IApi3ServerV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IOevDapiServer.sol\\\";\\nimport \\\"./IBeaconUpdatesWithSignedData.sol\\\";\\n\\ninterface IApi3ServerV1 is IOevDapiServer, IBeaconUpdatesWithSignedData {\\n    function readDataFeedWithId(\\n        bytes32 dataFeedId\\n    ) external view returns (int224 value, uint32 timestamp);\\n\\n    function readDataFeedWithDapiNameHash(\\n        bytes32 dapiNameHash\\n    ) external view returns (int224 value, uint32 timestamp);\\n\\n    function readDataFeedWithIdAsOevProxy(\\n        bytes32 dataFeedId\\n    ) external view returns (int224 value, uint32 timestamp);\\n\\n    function readDataFeedWithDapiNameHashAsOevProxy(\\n        bytes32 dapiNameHash\\n    ) external view returns (int224 value, uint32 timestamp);\\n\\n    function dataFeeds(\\n        bytes32 dataFeedId\\n    ) external view returns (int224 value, uint32 timestamp);\\n\\n    function oevProxyToIdToDataFeed(\\n        address proxy,\\n        bytes32 dataFeedId\\n    ) external view returns (int224 value, uint32 timestamp);\\n}\\n\",\"keccak256\":\"0xea2c05eaf2a19c93a9c9b08243fcabd8d7fcf0e4d422f7c687aef693126c1809\",\"license\":\"MIT\"},\"contracts/dapis/interfaces/IBeaconUpdatesWithSignedData.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IDataFeedServer.sol\\\";\\n\\ninterface IBeaconUpdatesWithSignedData is IDataFeedServer {\\n    function updateBeaconWithSignedData(\\n        address airnode,\\n        bytes32 templateId,\\n        uint256 timestamp,\\n        bytes calldata data,\\n        bytes calldata signature\\n    ) external returns (bytes32 beaconId);\\n}\\n\",\"keccak256\":\"0xe2b2530081508baf1323d4c145a688ffd548cf318a8cb67c9ccb4abe1ac81c6e\",\"license\":\"MIT\"},\"contracts/dapis/interfaces/IDapiServer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../access-control-registry/interfaces/IAccessControlRegistryAdminnedWithManager.sol\\\";\\nimport \\\"./IDataFeedServer.sol\\\";\\n\\ninterface IDapiServer is\\n    IAccessControlRegistryAdminnedWithManager,\\n    IDataFeedServer\\n{\\n    event SetDapiName(\\n        bytes32 indexed dataFeedId,\\n        bytes32 indexed dapiName,\\n        address sender\\n    );\\n\\n    function setDapiName(bytes32 dapiName, bytes32 dataFeedId) external;\\n\\n    function dapiNameToDataFeedId(\\n        bytes32 dapiName\\n    ) external view returns (bytes32);\\n\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DAPI_NAME_SETTER_ROLE_DESCRIPTION()\\n        external\\n        view\\n        returns (string memory);\\n\\n    function dapiNameSetterRole() external view returns (bytes32);\\n\\n    function dapiNameHashToDataFeedId(\\n        bytes32 dapiNameHash\\n    ) external view returns (bytes32 dataFeedId);\\n}\\n\",\"keccak256\":\"0x61cd079ceb84d2b7414b82da71f4f000e52a0a1429065ec666e77ef6e5f21ea1\",\"license\":\"MIT\"},\"contracts/dapis/interfaces/IDataFeedServer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/interfaces/IExtendedSelfMulticall.sol\\\";\\n\\ninterface IDataFeedServer is IExtendedSelfMulticall {\\n    event UpdatedBeaconWithSignedData(\\n        bytes32 indexed beaconId,\\n        int224 value,\\n        uint32 timestamp\\n    );\\n\\n    event UpdatedBeaconSetWithBeacons(\\n        bytes32 indexed beaconSetId,\\n        int224 value,\\n        uint32 timestamp\\n    );\\n\\n    function updateBeaconSetWithBeacons(\\n        bytes32[] memory beaconIds\\n    ) external returns (bytes32 beaconSetId);\\n}\\n\",\"keccak256\":\"0x208f751f71b16d454cafd9188095178fdc776ee0376a85362f6022e7a4f010a3\",\"license\":\"MIT\"},\"contracts/dapis/interfaces/IOevDapiServer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IOevDataFeedServer.sol\\\";\\nimport \\\"./IDapiServer.sol\\\";\\n\\ninterface IOevDapiServer is IOevDataFeedServer, IDapiServer {}\\n\",\"keccak256\":\"0xf4082c33979785131358a217a8c5cf498a53c04318868eb1cb68e934c33226e3\",\"license\":\"MIT\"},\"contracts/dapis/interfaces/IOevDataFeedServer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IDataFeedServer.sol\\\";\\n\\ninterface IOevDataFeedServer is IDataFeedServer {\\n    event UpdatedOevProxyBeaconWithSignedData(\\n        bytes32 indexed beaconId,\\n        address indexed proxy,\\n        bytes32 indexed updateId,\\n        int224 value,\\n        uint32 timestamp\\n    );\\n\\n    event UpdatedOevProxyBeaconSetWithSignedData(\\n        bytes32 indexed beaconSetId,\\n        address indexed proxy,\\n        bytes32 indexed updateId,\\n        int224 value,\\n        uint32 timestamp\\n    );\\n\\n    event Withdrew(\\n        address indexed oevProxy,\\n        address oevBeneficiary,\\n        uint256 amount\\n    );\\n\\n    function updateOevProxyDataFeedWithSignedData(\\n        address oevProxy,\\n        bytes32 dataFeedId,\\n        bytes32 updateId,\\n        uint256 timestamp,\\n        bytes calldata data,\\n        bytes[] calldata packedOevUpdateSignatures\\n    ) external payable;\\n\\n    function withdraw(address oevProxy) external;\\n\\n    function oevProxyToBalance(\\n        address oevProxy\\n    ) external view returns (uint256 balance);\\n}\\n\",\"keccak256\":\"0x2d162c576bfe5554767bb48758314c3e6f2c509f73203f0e166d1ac5168a1218\",\"license\":\"MIT\"},\"contracts/dapis/proxies/DapiProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/IDapiProxy.sol\\\";\\nimport \\\"../interfaces/IApi3ServerV1.sol\\\";\\n\\n/// @title An immutable proxy contract that is used to read a specific dAPI of\\n/// a specific DapiServer contract\\n/// @notice In an effort to reduce the bytecode of this contract, its\\n/// constructor arguments are validated by ProxyFactory, rather than\\n/// internally. If you intend to deploy this contract without using\\n/// ProxyFactory, you are recommended to implement an equivalent validation.\\n/// @dev The proxy contracts are generalized to support most types of numerical\\n/// data feeds. This means that the user of this proxy is expected to validate\\n/// the read values according to the specific use-case. For example, `value` is\\n/// a signed integer, yet it being negative may not make sense in the case that\\n/// the data feed represents the spot price of an asset. In that case, the user\\n/// is responsible with ensuring that `value` is not negative.\\n/// In the case that the data feed is from a single source, `timestamp` is the\\n/// system time of the Airnode when it signed the data. In the case that the\\n/// data feed is from multiple sources, `timestamp` is the median of system\\n/// times of the Airnodes when they signed the respective data. There are two\\n/// points to consider while using `timestamp` in your contract logic: (1) It\\n/// is based on the system time of the Airnodes, and not the block timestamp.\\n/// This may be relevant when either of them drifts. (2) `timestamp` is an\\n/// off-chain value that is being reported, similar to `value`. Both should\\n/// only be trusted as much as the Airnode(s) that report them.\\ncontract DapiProxy is IDapiProxy {\\n    /// @notice DapiServer address\\n    address public immutable override dapiServer;\\n    /// @notice Hash of the dAPI name\\n    bytes32 public immutable override dapiNameHash;\\n\\n    /// @param _dapiServer DapiServer address\\n    /// @param _dapiNameHash Hash of the dAPI name\\n    constructor(address _dapiServer, bytes32 _dapiNameHash) {\\n        dapiServer = _dapiServer;\\n        dapiNameHash = _dapiNameHash;\\n    }\\n\\n    /// @notice Reads the dAPI that this proxy maps to\\n    /// @return value dAPI value\\n    /// @return timestamp dAPI timestamp\\n    function read()\\n        external\\n        view\\n        virtual\\n        override\\n        returns (int224 value, uint32 timestamp)\\n    {\\n        (value, timestamp) = IApi3ServerV1(dapiServer)\\n            .readDataFeedWithDapiNameHash(dapiNameHash);\\n    }\\n}\\n\",\"keccak256\":\"0xc557029450481b5235101f830fcb44f1da1a0079a6f10c658845a4af6eb22807\",\"license\":\"MIT\"},\"contracts/dapis/proxies/DapiProxyWithOev.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./DapiProxy.sol\\\";\\nimport \\\"./interfaces/IOevProxy.sol\\\";\\n\\n/// @title An immutable proxy contract that is used to read a specific dAPI of\\n/// a specific DapiServer contract and inform DapiServer about the beneficiary\\n/// of the respective OEV proceeds\\n/// @notice In an effort to reduce the bytecode of this contract, its\\n/// constructor arguments are validated by ProxyFactory, rather than\\n/// internally. If you intend to deploy this contract without using\\n/// ProxyFactory, you are recommended to implement an equivalent validation.\\n/// @dev See DapiProxy.sol for comments about usage\\ncontract DapiProxyWithOev is DapiProxy, IOevProxy {\\n    /// @notice OEV beneficiary address\\n    address public immutable override oevBeneficiary;\\n\\n    /// @param _dapiServer DapiServer address\\n    /// @param _dapiNameHash Hash of the dAPI name\\n    /// @param _oevBeneficiary OEV beneficiary\\n    constructor(\\n        address _dapiServer,\\n        bytes32 _dapiNameHash,\\n        address _oevBeneficiary\\n    ) DapiProxy(_dapiServer, _dapiNameHash) {\\n        oevBeneficiary = _oevBeneficiary;\\n    }\\n\\n    /// @notice Reads the dAPI that this proxy maps to\\n    /// @return value dAPI value\\n    /// @return timestamp dAPI timestamp\\n    function read()\\n        external\\n        view\\n        virtual\\n        override\\n        returns (int224 value, uint32 timestamp)\\n    {\\n        (value, timestamp) = IApi3ServerV1(dapiServer)\\n            .readDataFeedWithDapiNameHashAsOevProxy(dapiNameHash);\\n    }\\n}\\n\",\"keccak256\":\"0x5048717a222921545160b989607d830a4f52d83f701a9375f2b4c3526859d1c2\",\"license\":\"MIT\"},\"contracts/dapis/proxies/DataFeedProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/IDataFeedProxy.sol\\\";\\nimport \\\"../interfaces/IApi3ServerV1.sol\\\";\\n\\n/// @title An immutable proxy contract that is used to read a specific data\\n/// feed (Beacon or Beacon set) of a specific DapiServer contract\\n/// @notice In an effort to reduce the bytecode of this contract, its\\n/// constructor arguments are validated by ProxyFactory, rather than\\n/// internally. If you intend to deploy this contract without using\\n/// ProxyFactory, you are recommended to implement an equivalent validation.\\n/// @dev See DapiProxy.sol for comments about usage\\ncontract DataFeedProxy is IDataFeedProxy {\\n    /// @notice DapiServer address\\n    address public immutable override dapiServer;\\n    /// @notice Data feed ID\\n    bytes32 public immutable override dataFeedId;\\n\\n    /// @param _dapiServer DapiServer address\\n    /// @param _dataFeedId Data feed (Beacon or Beacon set) ID\\n    constructor(address _dapiServer, bytes32 _dataFeedId) {\\n        dapiServer = _dapiServer;\\n        dataFeedId = _dataFeedId;\\n    }\\n\\n    /// @notice Reads the data feed that this proxy maps to\\n    /// @return value Data feed value\\n    /// @return timestamp Data feed timestamp\\n    function read()\\n        external\\n        view\\n        virtual\\n        override\\n        returns (int224 value, uint32 timestamp)\\n    {\\n        (value, timestamp) = IApi3ServerV1(dapiServer).readDataFeedWithId(\\n            dataFeedId\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0xccb84bb14cd4e46edd3f3f79b49121c890e6c8b9378763489bcf189383ed488d\",\"license\":\"MIT\"},\"contracts/dapis/proxies/DataFeedProxyWithOev.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./DataFeedProxy.sol\\\";\\nimport \\\"./interfaces/IOevProxy.sol\\\";\\n\\n/// @title An immutable proxy contract that is used to read a specific data\\n/// feed (Beacon or Beacon set) of a specific DapiServer contract and inform\\n/// DapiServer about the beneficiary of the respective OEV proceeds\\n/// @notice In an effort to reduce the bytecode of this contract, its\\n/// constructor arguments are validated by ProxyFactory, rather than\\n/// internally. If you intend to deploy this contract without using\\n/// ProxyFactory, you are recommended to implement an equivalent validation.\\n/// @dev See DapiProxy.sol for comments about usage\\ncontract DataFeedProxyWithOev is DataFeedProxy, IOevProxy {\\n    /// @notice OEV beneficiary address\\n    address public immutable override oevBeneficiary;\\n\\n    /// @param _dapiServer DapiServer address\\n    /// @param _dataFeedId Data feed (Beacon or Beacon set) ID\\n    /// @param _oevBeneficiary OEV beneficiary\\n    constructor(\\n        address _dapiServer,\\n        bytes32 _dataFeedId,\\n        address _oevBeneficiary\\n    ) DataFeedProxy(_dapiServer, _dataFeedId) {\\n        oevBeneficiary = _oevBeneficiary;\\n    }\\n\\n    /// @notice Reads the data feed that this proxy maps to\\n    /// @return value Data feed value\\n    /// @return timestamp Data feed timestamp\\n    function read()\\n        external\\n        view\\n        virtual\\n        override\\n        returns (int224 value, uint32 timestamp)\\n    {\\n        (value, timestamp) = IApi3ServerV1(dapiServer)\\n            .readDataFeedWithIdAsOevProxy(dataFeedId);\\n    }\\n}\\n\",\"keccak256\":\"0x987a77d988bc1e7aedde3968270b6e1c97b284ff6bec83bb7e4f25b89f706bd2\",\"license\":\"MIT\"},\"contracts/dapis/proxies/ProxyFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./DataFeedProxy.sol\\\";\\nimport \\\"./DapiProxy.sol\\\";\\nimport \\\"./DataFeedProxyWithOev.sol\\\";\\nimport \\\"./DapiProxyWithOev.sol\\\";\\nimport \\\"./interfaces/IProxyFactory.sol\\\";\\n\\n/// @title Contract factory that deterministically deploys proxies that read\\n/// data feeds (Beacons or Beacon sets) or dAPIs, along with optional OEV\\n/// support\\n/// @dev The proxies are deployed normally and not cloned to minimize the gas\\n/// cost overhead while using them to read data feed values\\ncontract ProxyFactory is IProxyFactory {\\n    /// @notice DapiServer address\\n    address public immutable override dapiServer;\\n\\n    /// @param _dapiServer DapiServer address\\n    constructor(address _dapiServer) {\\n        require(_dapiServer != address(0), \\\"DapiServer address zero\\\");\\n        dapiServer = _dapiServer;\\n    }\\n\\n    /// @notice Deterministically deploys a data feed proxy\\n    /// @param dataFeedId Data feed ID\\n    /// @param metadata Metadata associated with the proxy\\n    /// @return proxyAddress Proxy address\\n    function deployDataFeedProxy(\\n        bytes32 dataFeedId,\\n        bytes calldata metadata\\n    ) external override returns (address proxyAddress) {\\n        require(dataFeedId != bytes32(0), \\\"Data feed ID zero\\\");\\n        proxyAddress = address(\\n            new DataFeedProxy{salt: keccak256(metadata)}(dapiServer, dataFeedId)\\n        );\\n        emit DeployedDataFeedProxy(proxyAddress, dataFeedId, metadata);\\n    }\\n\\n    /// @notice Deterministically deploys a dAPI proxy\\n    /// @param dapiName dAPI name\\n    /// @param metadata Metadata associated with the proxy\\n    /// @return proxyAddress Proxy address\\n    function deployDapiProxy(\\n        bytes32 dapiName,\\n        bytes calldata metadata\\n    ) external override returns (address proxyAddress) {\\n        require(dapiName != bytes32(0), \\\"dAPI name zero\\\");\\n        proxyAddress = address(\\n            new DapiProxy{salt: keccak256(metadata)}(\\n                dapiServer,\\n                keccak256(abi.encodePacked(dapiName))\\n            )\\n        );\\n        emit DeployedDapiProxy(proxyAddress, dapiName, metadata);\\n    }\\n\\n    /// @notice Deterministically deploys a data feed proxy with OEV support\\n    /// @param dataFeedId Data feed ID\\n    /// @param oevBeneficiary OEV beneficiary\\n    /// @param metadata Metadata associated with the proxy\\n    /// @return proxyAddress Proxy address\\n    function deployDataFeedProxyWithOev(\\n        bytes32 dataFeedId,\\n        address oevBeneficiary,\\n        bytes calldata metadata\\n    ) external override returns (address proxyAddress) {\\n        require(dataFeedId != bytes32(0), \\\"Data feed ID zero\\\");\\n        require(oevBeneficiary != address(0), \\\"OEV beneficiary zero\\\");\\n        proxyAddress = address(\\n            new DataFeedProxyWithOev{salt: keccak256(metadata)}(\\n                dapiServer,\\n                dataFeedId,\\n                oevBeneficiary\\n            )\\n        );\\n        emit DeployedDataFeedProxyWithOev(\\n            proxyAddress,\\n            dataFeedId,\\n            oevBeneficiary,\\n            metadata\\n        );\\n    }\\n\\n    /// @notice Deterministically deploys a dAPI proxy with OEV support\\n    /// @param dapiName dAPI name\\n    /// @param oevBeneficiary OEV beneficiary\\n    /// @param metadata Metadata associated with the proxy\\n    /// @return proxyAddress Proxy address\\n    function deployDapiProxyWithOev(\\n        bytes32 dapiName,\\n        address oevBeneficiary,\\n        bytes calldata metadata\\n    ) external override returns (address proxyAddress) {\\n        require(dapiName != bytes32(0), \\\"dAPI name zero\\\");\\n        require(oevBeneficiary != address(0), \\\"OEV beneficiary zero\\\");\\n        proxyAddress = address(\\n            new DapiProxyWithOev{salt: keccak256(metadata)}(\\n                dapiServer,\\n                keccak256(abi.encodePacked(dapiName)),\\n                oevBeneficiary\\n            )\\n        );\\n        emit DeployedDapiProxyWithOev(\\n            proxyAddress,\\n            dapiName,\\n            oevBeneficiary,\\n            metadata\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0xd8a8ff80033b8627fe43f8cd0384311ff6fc73d1109fbe403984f81566af0a83\",\"license\":\"MIT\"},\"contracts/dapis/proxies/interfaces/IDapiProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IProxy.sol\\\";\\n\\ninterface IDapiProxy is IProxy {\\n    function dapiNameHash() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x7fee704659b2fd4629ce105b686284bb922f73d2261b04ad927f8e4b54479409\",\"license\":\"MIT\"},\"contracts/dapis/proxies/interfaces/IDataFeedProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IProxy.sol\\\";\\n\\ninterface IDataFeedProxy is IProxy {\\n    function dataFeedId() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x114b4d530c3aa4e9359d7d4596170068b294d65ead405dc590b120e991d7b587\",\"license\":\"MIT\"},\"contracts/dapis/proxies/interfaces/IOevProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOevProxy {\\n    function oevBeneficiary() external view returns (address);\\n}\\n\",\"keccak256\":\"0xcd9962a465c96e85638eb40775da008f9c86a0ea0c50c7c5fcbb11c55f48fc22\",\"license\":\"MIT\"},\"contracts/dapis/proxies/interfaces/IProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @dev See DapiProxy.sol for comments about usage\\ninterface IProxy {\\n    function read() external view returns (int224 value, uint32 timestamp);\\n\\n    function dapiServer() external view returns (address);\\n}\\n\",\"keccak256\":\"0x667f230104dd15d5ccea18ce91f1c66169e27391c1f32d6bd1a33dbf1cd82fc4\",\"license\":\"MIT\"},\"contracts/dapis/proxies/interfaces/IProxyFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IProxyFactory {\\n    event DeployedDataFeedProxy(\\n        address indexed proxyAddress,\\n        bytes32 indexed dataFeedId,\\n        bytes metadata\\n    );\\n\\n    event DeployedDapiProxy(\\n        address indexed proxyAddress,\\n        bytes32 indexed dapiName,\\n        bytes metadata\\n    );\\n\\n    event DeployedDataFeedProxyWithOev(\\n        address indexed proxyAddress,\\n        bytes32 indexed dataFeedId,\\n        address oevBeneficiary,\\n        bytes metadata\\n    );\\n\\n    event DeployedDapiProxyWithOev(\\n        address indexed proxyAddress,\\n        bytes32 indexed dapiName,\\n        address oevBeneficiary,\\n        bytes metadata\\n    );\\n\\n    function deployDataFeedProxy(\\n        bytes32 dataFeedId,\\n        bytes calldata metadata\\n    ) external returns (address proxyAddress);\\n\\n    function deployDapiProxy(\\n        bytes32 dapiName,\\n        bytes calldata metadata\\n    ) external returns (address proxyAddress);\\n\\n    function deployDataFeedProxyWithOev(\\n        bytes32 dataFeedId,\\n        address oevBeneficiary,\\n        bytes calldata metadata\\n    ) external returns (address proxyAddress);\\n\\n    function deployDapiProxyWithOev(\\n        bytes32 dapiName,\\n        address oevBeneficiary,\\n        bytes calldata metadata\\n    ) external returns (address proxyAddress);\\n\\n    function dapiServer() external view returns (address);\\n}\\n\",\"keccak256\":\"0xdc0f1b95c523addc075e5531063b0d19ccc183cbeb542447754ad7d0b152a0d9\",\"license\":\"MIT\"},\"contracts/utils/interfaces/IExtendedSelfMulticall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ISelfMulticall.sol\\\";\\n\\ninterface IExtendedSelfMulticall is ISelfMulticall {\\n    function getChainId() external view returns (uint256);\\n\\n    function getBalance(address account) external view returns (uint256);\\n\\n    function containsBytecode(address account) external view returns (bool);\\n\\n    function getBlockNumber() external view returns (uint256);\\n\\n    function getBlockTimestamp() external view returns (uint256);\\n\\n    function getBlockBasefee() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xaefe61a623c920d3e39c4779535e280378b44202d11c29a2c96f46f2fe5f420d\",\"license\":\"MIT\"},\"contracts/utils/interfaces/ISelfMulticall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ISelfMulticall {\\n    function multicall(\\n        bytes[] calldata data\\n    ) external returns (bytes[] memory returndata);\\n\\n    function tryMulticall(\\n        bytes[] calldata data\\n    ) external returns (bool[] memory successes, bytes[] memory returndata);\\n}\\n\",\"keccak256\":\"0x50b27284f0d5acd8b340836c09d252138ebf059f426e5d90d3f7221e1b7d0817\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516115f83803806115f883398101604081905261002f9161009a565b6001600160a01b0381166100895760405162461bcd60e51b815260206004820152601760248201527f446170695365727665722061646472657373207a65726f000000000000000000604482015260640160405180910390fd5b6001600160a01b03166080526100ca565b6000602082840312156100ac57600080fd5b81516001600160a01b03811681146100c357600080fd5b9392505050565b6080516114f86101006000396000818160d9015281816101bf0152818161030e0152818161047c015261059301526114f86000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638dae1a47116100505780638dae1a47146100ae5780639ae06c84146100c15780639f03866b146100d457600080fd5b80635849e5ef1461006c5780637dba74581461009b575b600080fd5b61007f61007a3660046106d8565b6100fb565b6040516001600160a01b03909116815260200160405180910390f35b61007f6100a9366004610740565b6102a5565b61007f6100bc3660046106d8565b6103bd565b61007f6100cf366004610740565b61052a565b61007f7f000000000000000000000000000000000000000000000000000000000000000081565b60008461014f5760405162461bcd60e51b815260206004820152600e60248201527f64415049206e616d65207a65726f00000000000000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b0384166101a55760405162461bcd60e51b815260206004820152601460248201527f4f45562062656e6566696369617279207a65726f0000000000000000000000006044820152606401610146565b82826040516101b592919061078c565b60405180910390207f0000000000000000000000000000000000000000000000000000000000000000866040516020016101f191815260200190565b60405160208183030381529060405280519060200120866040516102149061065b565b6001600160a01b039384168152602081019290925290911660408201526060018190604051809103906000f5905080158015610254573d6000803e3d6000fd5b50905084816001600160a01b03167f31d654553da13df7303eb8db83942ff8816845087d3149515a220f5afb37aedd868686604051610295939291906107c5565b60405180910390a3949350505050565b6000836102f45760405162461bcd60e51b815260206004820152601160248201527f446174612066656564204944207a65726f0000000000000000000000000000006044820152606401610146565b828260405161030492919061078c565b60405180910390207f00000000000000000000000000000000000000000000000000000000000000008560405161033a90610668565b6001600160a01b03909216825260208201526040018190604051809103906000f590508015801561036f573d6000803e3d6000fd5b50905083816001600160a01b03167f9a2a9d77287e93a2addaf0c5f3e354d075dfb475f5e197f9abc9b11b922fa94385856040516103ae9291906107f1565b60405180910390a39392505050565b60008461040c5760405162461bcd60e51b815260206004820152601160248201527f446174612066656564204944207a65726f0000000000000000000000000000006044820152606401610146565b6001600160a01b0384166104625760405162461bcd60e51b815260206004820152601460248201527f4f45562062656e6566696369617279207a65726f0000000000000000000000006044820152606401610146565b828260405161047292919061078c565b60405180910390207f000000000000000000000000000000000000000000000000000000000000000086866040516104a990610675565b6001600160a01b039384168152602081019290925290911660408201526060018190604051809103906000f59050801580156104e9573d6000803e3d6000fd5b50905084816001600160a01b03167fff915717e95cf852fef69474bc2bfb3c26ccc15a6978a90ab0a78bc565644d4e868686604051610295939291906107c5565b6000836105795760405162461bcd60e51b815260206004820152600e60248201527f64415049206e616d65207a65726f0000000000000000000000000000000000006044820152606401610146565b828260405161058992919061078c565b60405180910390207f0000000000000000000000000000000000000000000000000000000000000000856040516020016105c591815260200190565b604051602081830303815290604052805190602001206040516105e790610682565b6001600160a01b03909216825260208201526040018190604051809103906000f590508015801561061c573d6000803e3d6000fd5b50905083816001600160a01b03167f5212a04ae578b0432469e3d61a28f222c00cf2f5e14d69b0f08c7d327b623d1d85856040516103ae9291906107f1565b61035d8061080e83390190565b6102fd80610b6b83390190565b61035e80610e6883390190565b6102fd806111c683390190565b60008083601f8401126106a157600080fd5b50813567ffffffffffffffff8111156106b957600080fd5b6020830191508360208285010111156106d157600080fd5b9250929050565b600080600080606085870312156106ee57600080fd5b8435935060208501356001600160a01b038116811461070c57600080fd5b9250604085013567ffffffffffffffff81111561072857600080fd5b6107348782880161068f565b95989497509550505050565b60008060006040848603121561075557600080fd5b83359250602084013567ffffffffffffffff81111561077357600080fd5b61077f8682870161068f565b9497909650939450505050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b03841681526040602082015260006107e860408301848661079c565b95945050505050565b60208152600061080560208301848661079c565b94935050505056fe60e060405234801561001057600080fd5b5060405161035d38038061035d83398101604081905261002f91610068565b6001600160a01b0392831660805260a0919091521660c0526100a4565b80516001600160a01b038116811461006357600080fd5b919050565b60008060006060848603121561007d57600080fd5b6100868461004c565b92506020840151915061009b6040850161004c565b90509250925092565b60805160a05160c05161027f6100de6000396000605601526000818160f5015261014d01526000818160ce015261018d015261027f6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630e15999d1461005157806357de26a4146100a25780639f03866b146100c9578063dcf8da92146100f0575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100aa610125565b60408051601b9390930b835263ffffffff909116602083015201610099565b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6101177f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610099565b6040517f32be8f0b0000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152600090819073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906332be8f0b906024016040805180830381865afa1580156101d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f79190610200565b90939092509050565b6000806040838503121561021357600080fd5b825180601b0b811461022457600080fd5b602084015190925063ffffffff8116811461023e57600080fd5b80915050925092905056fea2646970667358221220c7b028cc21ebcd54de7865c5ec31cef6e2d56caa7613d0a948f48601b7c17ef264736f6c6343000811003360c060405234801561001057600080fd5b506040516102fd3803806102fd83398101604081905261002f91610045565b6001600160a01b0390911660805260a05261007f565b6000806040838503121561005857600080fd5b82516001600160a01b038116811461006f57600080fd5b6020939093015192949293505050565b60805160a05161024d6100b060003960008181604b015261011b01526000818160ac015261015b015261024d6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063370c826b1461004657806357de26a4146100805780639f03866b146100a7575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6100886100f3565b60408051601b9390930b835263ffffffff909116602083015201610077565b6100ce7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610077565b6040517fa5fc076f0000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152600090819073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063a5fc076f906024016040805180830381865afa1580156101a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c591906101ce565b90939092509050565b600080604083850312156101e157600080fd5b825180601b0b81146101f257600080fd5b602084015190925063ffffffff8116811461020c57600080fd5b80915050925092905056fea26469706673582212208149d15a061d7e9e91e567f533fcd8a82ab1d4b16b40a554138f9984b97f5ea864736f6c6343000811003360e060405234801561001057600080fd5b5060405161035e38038061035e83398101604081905261002f91610068565b6001600160a01b0392831660805260a0919091521660c0526100a4565b80516001600160a01b038116811461006357600080fd5b919050565b60008060006060848603121561007d57600080fd5b6100868461004c565b92506020840151915061009b6040850161004c565b90509250925092565b60805160a05160c05161027f6100df6000396000605601526000818160a7015261014d015260008181610103015261018d015261027f6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630e15999d14610051578063370c826b146100a257806357de26a4146100d75780639f03866b146100fe575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100c97f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610099565b6100df610125565b60408051601b9390930b835263ffffffff909116602083015201610099565b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6040517fcfaf49710000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152600090819073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063cfaf4971906024016040805180830381865afa1580156101d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f79190610200565b90939092509050565b6000806040838503121561021357600080fd5b825180601b0b811461022457600080fd5b602084015190925063ffffffff8116811461023e57600080fd5b80915050925092905056fea2646970667358221220dc8d4d0ddbdb0c44baba7e43b4bda062fefaf2176ae401af1b6b58887a9506c964736f6c6343000811003360c060405234801561001057600080fd5b506040516102fd3803806102fd83398101604081905261002f91610045565b6001600160a01b0390911660805260a05261007f565b6000806040838503121561005857600080fd5b82516001600160a01b038116811461006f57600080fd5b6020939093015192949293505050565b60805160a05161024d6100b06000396000818160c3015261011b0152600081816077015261015b015261024d6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806357de26a4146100465780639f03866b14610072578063dcf8da92146100be575b600080fd5b61004e6100f3565b60408051601b9390930b835263ffffffff9091166020830152015b60405180910390f35b6100997f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610069565b6100e57f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610069565b6040517fb62408a30000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152600090819073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063b62408a3906024016040805180830381865afa1580156101a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c591906101ce565b90939092509050565b600080604083850312156101e157600080fd5b825180601b0b81146101f257600080fd5b602084015190925063ffffffff8116811461020c57600080fd5b80915050925092905056fea26469706673582212201572fc2acc93a11aa43c6c65627cb98b448c52e0612ce78e05bb74e3cf8018cf64736f6c63430008110033a2646970667358221220c56d17455973ba50b42ee786a5fbeadf0781b0ae1b2bb3bb7b6033c41cad9eac64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c80638dae1a47116100505780638dae1a47146100ae5780639ae06c84146100c15780639f03866b146100d457600080fd5b80635849e5ef1461006c5780637dba74581461009b575b600080fd5b61007f61007a3660046106d8565b6100fb565b6040516001600160a01b03909116815260200160405180910390f35b61007f6100a9366004610740565b6102a5565b61007f6100bc3660046106d8565b6103bd565b61007f6100cf366004610740565b61052a565b61007f7f000000000000000000000000000000000000000000000000000000000000000081565b60008461014f5760405162461bcd60e51b815260206004820152600e60248201527f64415049206e616d65207a65726f00000000000000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b0384166101a55760405162461bcd60e51b815260206004820152601460248201527f4f45562062656e6566696369617279207a65726f0000000000000000000000006044820152606401610146565b82826040516101b592919061078c565b60405180910390207f0000000000000000000000000000000000000000000000000000000000000000866040516020016101f191815260200190565b60405160208183030381529060405280519060200120866040516102149061065b565b6001600160a01b039384168152602081019290925290911660408201526060018190604051809103906000f5905080158015610254573d6000803e3d6000fd5b50905084816001600160a01b03167f31d654553da13df7303eb8db83942ff8816845087d3149515a220f5afb37aedd868686604051610295939291906107c5565b60405180910390a3949350505050565b6000836102f45760405162461bcd60e51b815260206004820152601160248201527f446174612066656564204944207a65726f0000000000000000000000000000006044820152606401610146565b828260405161030492919061078c565b60405180910390207f00000000000000000000000000000000000000000000000000000000000000008560405161033a90610668565b6001600160a01b03909216825260208201526040018190604051809103906000f590508015801561036f573d6000803e3d6000fd5b50905083816001600160a01b03167f9a2a9d77287e93a2addaf0c5f3e354d075dfb475f5e197f9abc9b11b922fa94385856040516103ae9291906107f1565b60405180910390a39392505050565b60008461040c5760405162461bcd60e51b815260206004820152601160248201527f446174612066656564204944207a65726f0000000000000000000000000000006044820152606401610146565b6001600160a01b0384166104625760405162461bcd60e51b815260206004820152601460248201527f4f45562062656e6566696369617279207a65726f0000000000000000000000006044820152606401610146565b828260405161047292919061078c565b60405180910390207f000000000000000000000000000000000000000000000000000000000000000086866040516104a990610675565b6001600160a01b039384168152602081019290925290911660408201526060018190604051809103906000f59050801580156104e9573d6000803e3d6000fd5b50905084816001600160a01b03167fff915717e95cf852fef69474bc2bfb3c26ccc15a6978a90ab0a78bc565644d4e868686604051610295939291906107c5565b6000836105795760405162461bcd60e51b815260206004820152600e60248201527f64415049206e616d65207a65726f0000000000000000000000000000000000006044820152606401610146565b828260405161058992919061078c565b60405180910390207f0000000000000000000000000000000000000000000000000000000000000000856040516020016105c591815260200190565b604051602081830303815290604052805190602001206040516105e790610682565b6001600160a01b03909216825260208201526040018190604051809103906000f590508015801561061c573d6000803e3d6000fd5b50905083816001600160a01b03167f5212a04ae578b0432469e3d61a28f222c00cf2f5e14d69b0f08c7d327b623d1d85856040516103ae9291906107f1565b61035d8061080e83390190565b6102fd80610b6b83390190565b61035e80610e6883390190565b6102fd806111c683390190565b60008083601f8401126106a157600080fd5b50813567ffffffffffffffff8111156106b957600080fd5b6020830191508360208285010111156106d157600080fd5b9250929050565b600080600080606085870312156106ee57600080fd5b8435935060208501356001600160a01b038116811461070c57600080fd5b9250604085013567ffffffffffffffff81111561072857600080fd5b6107348782880161068f565b95989497509550505050565b60008060006040848603121561075557600080fd5b83359250602084013567ffffffffffffffff81111561077357600080fd5b61077f8682870161068f565b9497909650939450505050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b03841681526040602082015260006107e860408301848661079c565b95945050505050565b60208152600061080560208301848661079c565b94935050505056fe60e060405234801561001057600080fd5b5060405161035d38038061035d83398101604081905261002f91610068565b6001600160a01b0392831660805260a0919091521660c0526100a4565b80516001600160a01b038116811461006357600080fd5b919050565b60008060006060848603121561007d57600080fd5b6100868461004c565b92506020840151915061009b6040850161004c565b90509250925092565b60805160a05160c05161027f6100de6000396000605601526000818160f5015261014d01526000818160ce015261018d015261027f6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630e15999d1461005157806357de26a4146100a25780639f03866b146100c9578063dcf8da92146100f0575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100aa610125565b60408051601b9390930b835263ffffffff909116602083015201610099565b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6101177f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610099565b6040517f32be8f0b0000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152600090819073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906332be8f0b906024016040805180830381865afa1580156101d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f79190610200565b90939092509050565b6000806040838503121561021357600080fd5b825180601b0b811461022457600080fd5b602084015190925063ffffffff8116811461023e57600080fd5b80915050925092905056fea2646970667358221220c7b028cc21ebcd54de7865c5ec31cef6e2d56caa7613d0a948f48601b7c17ef264736f6c6343000811003360c060405234801561001057600080fd5b506040516102fd3803806102fd83398101604081905261002f91610045565b6001600160a01b0390911660805260a05261007f565b6000806040838503121561005857600080fd5b82516001600160a01b038116811461006f57600080fd5b6020939093015192949293505050565b60805160a05161024d6100b060003960008181604b015261011b01526000818160ac015261015b015261024d6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063370c826b1461004657806357de26a4146100805780639f03866b146100a7575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6100886100f3565b60408051601b9390930b835263ffffffff909116602083015201610077565b6100ce7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610077565b6040517fa5fc076f0000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152600090819073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063a5fc076f906024016040805180830381865afa1580156101a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c591906101ce565b90939092509050565b600080604083850312156101e157600080fd5b825180601b0b81146101f257600080fd5b602084015190925063ffffffff8116811461020c57600080fd5b80915050925092905056fea26469706673582212208149d15a061d7e9e91e567f533fcd8a82ab1d4b16b40a554138f9984b97f5ea864736f6c6343000811003360e060405234801561001057600080fd5b5060405161035e38038061035e83398101604081905261002f91610068565b6001600160a01b0392831660805260a0919091521660c0526100a4565b80516001600160a01b038116811461006357600080fd5b919050565b60008060006060848603121561007d57600080fd5b6100868461004c565b92506020840151915061009b6040850161004c565b90509250925092565b60805160a05160c05161027f6100df6000396000605601526000818160a7015261014d015260008181610103015261018d015261027f6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630e15999d14610051578063370c826b146100a257806357de26a4146100d75780639f03866b146100fe575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100c97f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610099565b6100df610125565b60408051601b9390930b835263ffffffff909116602083015201610099565b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6040517fcfaf49710000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152600090819073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063cfaf4971906024016040805180830381865afa1580156101d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f79190610200565b90939092509050565b6000806040838503121561021357600080fd5b825180601b0b811461022457600080fd5b602084015190925063ffffffff8116811461023e57600080fd5b80915050925092905056fea2646970667358221220dc8d4d0ddbdb0c44baba7e43b4bda062fefaf2176ae401af1b6b58887a9506c964736f6c6343000811003360c060405234801561001057600080fd5b506040516102fd3803806102fd83398101604081905261002f91610045565b6001600160a01b0390911660805260a05261007f565b6000806040838503121561005857600080fd5b82516001600160a01b038116811461006f57600080fd5b6020939093015192949293505050565b60805160a05161024d6100b06000396000818160c3015261011b0152600081816077015261015b015261024d6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806357de26a4146100465780639f03866b14610072578063dcf8da92146100be575b600080fd5b61004e6100f3565b60408051601b9390930b835263ffffffff9091166020830152015b60405180910390f35b6100997f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610069565b6100e57f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610069565b6040517fb62408a30000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152600090819073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063b62408a3906024016040805180830381865afa1580156101a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c591906101ce565b90939092509050565b600080604083850312156101e157600080fd5b825180601b0b81146101f257600080fd5b602084015190925063ffffffff8116811461020c57600080fd5b80915050925092905056fea26469706673582212201572fc2acc93a11aa43c6c65627cb98b448c52e0612ce78e05bb74e3cf8018cf64736f6c63430008110033a2646970667358221220c56d17455973ba50b42ee786a5fbeadf0781b0ae1b2bb3bb7b6033c41cad9eac64736f6c63430008110033",
  "devdoc": {
    "details": "The proxies are deployed normally and not cloned to minimize the gas cost overhead while using them to read data feed values",
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_dapiServer": "DapiServer address"
        }
      },
      "deployDapiProxy(bytes32,bytes)": {
        "params": {
          "dapiName": "dAPI name",
          "metadata": "Metadata associated with the proxy"
        },
        "returns": {
          "proxyAddress": "Proxy address"
        }
      },
      "deployDapiProxyWithOev(bytes32,address,bytes)": {
        "params": {
          "dapiName": "dAPI name",
          "metadata": "Metadata associated with the proxy",
          "oevBeneficiary": "OEV beneficiary"
        },
        "returns": {
          "proxyAddress": "Proxy address"
        }
      },
      "deployDataFeedProxy(bytes32,bytes)": {
        "params": {
          "dataFeedId": "Data feed ID",
          "metadata": "Metadata associated with the proxy"
        },
        "returns": {
          "proxyAddress": "Proxy address"
        }
      },
      "deployDataFeedProxyWithOev(bytes32,address,bytes)": {
        "params": {
          "dataFeedId": "Data feed ID",
          "metadata": "Metadata associated with the proxy",
          "oevBeneficiary": "OEV beneficiary"
        },
        "returns": {
          "proxyAddress": "Proxy address"
        }
      }
    },
    "title": "Contract factory that deterministically deploys proxies that read data feeds (Beacons or Beacon sets) or dAPIs, along with optional OEV support",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "dapiServer()": {
        "notice": "DapiServer address"
      },
      "deployDapiProxy(bytes32,bytes)": {
        "notice": "Deterministically deploys a dAPI proxy"
      },
      "deployDapiProxyWithOev(bytes32,address,bytes)": {
        "notice": "Deterministically deploys a dAPI proxy with OEV support"
      },
      "deployDataFeedProxy(bytes32,bytes)": {
        "notice": "Deterministically deploys a data feed proxy"
      },
      "deployDataFeedProxyWithOev(bytes32,address,bytes)": {
        "notice": "Deterministically deploys a data feed proxy with OEV support"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}
